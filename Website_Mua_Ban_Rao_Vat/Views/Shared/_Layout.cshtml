@{
    var username = Session["userName"]?.ToString();
    var userAvatar = Session["userAvatar"]?.ToString();
    var avatarPath = !string.IsNullOrEmpty(userAvatar) ? Url.Content(userAvatar) : Url.Content("~/Contents/image/user.png");
}

<!DOCTYPE html>
<html lang="vi">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")
    <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.10.5/font/bootstrap-icons.css" rel="stylesheet" />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css" crossorigin="anonymous" />
    <script src="https://cdnjs.cloudflare.com/ajax/libs/popper.js/2.11.6/umd/popper.min.js"></script>

    <style>
        @@media (max-width: 576px) {
            .navbar .dropdown-toggle span.fw-semibold {
                display: none;
            }

            .offcanvas-body form select,
            .offcanvas-body form input,
            .offcanvas-body form button {
                width: 100%;
            }
        }

        #notificationBox::-webkit-scrollbar {
            width: 6px;
        }

        #notificationBox::-webkit-scrollbar-thumb {
            background-color: rgba(0,0,0,0.2);
            border-radius: 3px;
        }

        #searchResults {
            max-width: 700px;
            background-color: white;
            border: 1px solid #ccc;
            z-index: 9999;
            position: absolute;
            top: 100%;
            left: 0;
            display: none;
            max-height: 300px;
            overflow-y: auto;
        }
    </style>

    <script>
        document.addEventListener("DOMContentLoaded", function () {
            const searchInput = document.getElementById("searchInput");
            const categorySelect = document.getElementById("categorySelect");
            const searchResults = document.getElementById("searchResults");

            let debounceTimer;

            if (searchInput && categorySelect && searchResults) {
                searchInput.addEventListener("input", function () {
                    const keyword = this.value.trim();
                    const categoryId = categorySelect.value;

                    clearTimeout(debounceTimer);

                    if (keyword.length < 2) {
                        searchResults.style.display = "none";
                        return;
                    }

                    debounceTimer = setTimeout(() => {
                        fetch(`/Home/SearchJson?keyword=${encodeURIComponent(keyword)}&categoryId=${categoryId}`, {
                            headers: { 'Accept': 'application/json' }
                        })
                            .then(res => {
                                if (!res.ok) throw new Error("Network response was not ok");
                                return res.json();
                            })
                            .then(data => {
                                searchResults.innerHTML = "";

                                if (!Array.isArray(data) || data.length === 0) {
                                    searchResults.style.display = "none";
                                    return;
                                }

                                data.forEach(item => {
                                    const li = document.createElement("li");
                                    li.className = "list-group-item d-flex align-items-center gap-3";
                                    li.innerHTML = `
        <img src="${item.imageUrl}" alt="${item.title}" width="60" height="60"
             class="rounded object-fit-cover border" style="flex-shrink: 0;">
        <div class="flex-grow-1">
            <div class="fw-semibold">${item.title}</div>
            <div class="text-danger">${item.price.toLocaleString()} đ</div>
        </div>`;
                                    li.style.cursor = "pointer";
                                    li.onclick = () => window.location.href = `/Bai-dang/${item.slug}-${item.encryptedId}`;
                                    searchResults.appendChild(li);
                                });

                                searchResults.style.display = "block";
                            })
                            .catch(err => {
                                console.error("Fetch error:", err);
                                searchResults.style.display = "none";
                            });
                    }, 300);
                });
            }
            const bell = document.getElementById("notificationToggle");
            const box = document.getElementById("notificationBox");

            if (bell && box) {
                bell.addEventListener("click", function (e) {
                    e.stopPropagation();
                    box.style.display = box.style.display === "none" ? "block" : "none";
                });

                document.addEventListener("click", function () {
                    box.style.display = "none";
                });

                box.addEventListener("click", function (e) {
                    e.stopPropagation();
                });
            }
        });
        function openMessagesPopup() {
            const width = window.innerWidth / 2;
            const height = window.innerHeight;
            const left = 0;
            const top = 0;
            window.open('@Url.Action("Messages", "Chat")', 'MessagesPopup',
                `width=${width},height=${height},top=${top},left=${left},resizable=yes,scrollbars=yes`);
            return false;
        }
        function openCenteredPopup(url, title, w, h) {
            const dualScreenLeft = window.screenLeft !== undefined ? window.screenLeft : screen.left;
            const dualScreenTop = window.screenTop !== undefined ? window.screenTop : screen.top;
            const width = window.innerWidth || document.documentElement.clientWidth || screen.width;
            const height = window.innerHeight || document.documentElement.clientHeight || screen.height;
            const left = ((width / 2) - (w / 2)) + dualScreenLeft;
            const top = ((height / 2) - (h / 2)) + dualScreenTop;
            const newWindow = window.open(url, title,
                `scrollbars=yes, width=${w}, height=${h}, top=${top}, left=${left}, resizable=no`);
            if (window.focus) newWindow.focus();
            return false;
        }
        function changePassword() {
    const oldPass = document.getElementById("oldPassword").value;
    const newPass = document.getElementById("newPassword").value;
    const confirmPass = document.getElementById("confirmPassword").value;
    const changeButton = document.getElementById("changeButton");
    changeButton.disabled = true;
    const originalText = changeButton.innerHTML;
    changeButton.innerHTML = `<span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>`;
    fetch('@Url.Action("ChangePassword", "Account")', {
        method: "POST",
        headers: {
            "Content-Type": "application/json",
            "RequestVerificationToken": $('input[name="__RequestVerificationToken"]').val()
        },
        body: JSON.stringify({
            OldPassword: oldPass,
            NewPassword: newPass,
            ConfirmPassword: confirmPass
        })
    })
    .then(res => res.json())
    .then(data => {
        if (data.success) {
            Swal.fire("Thành công", data.message, "success");
            const modal = bootstrap.Modal.getInstance(document.getElementById("changePasswordModal"));
            modal.hide();
        } else {
            Swal.fire("Lỗi", data.message, "error");
            changeButton.disabled = false;
            const originalText = changeButton.innerHTML;
            changeButton.innerHTML = `Đổi mật khẩu`;
        }
    })
    .catch(err => {
        console.error(err);
        Swal.fire("Lỗi", "Đã xảy ra lỗi. Vui lòng thử lại.", "error");
        changeButton.disabled = false;
        const originalText = changeButton.innerHTML;
        changeButton.innerHTML = `Đổi mật khẩu`;
    });
}
    </script>
</head>
<body>
    <nav class="navbar navbar-expand-lg navbar-light shadow-sm"
         style="background-color: khaki; position: sticky; top: 0; z-index: 1030;">
        <div class="container">
            <a class="navbar-brand d-flex align-items-center" href="@Url.Action("Index", "Home")">
                <img src="~/Contents/image/Logo.png" alt="Logo"
                     class="img-fluid" style="max-height: 40px; width: auto;" />
            </a>
            <button class="navbar-toggler" type="button" data-bs-toggle="offcanvas" data-bs-target="#offcanvasNavbar"
                    aria-controls="offcanvasNavbar">
                <span class="navbar-toggler-icon"></span>
            </button>

            <div class="offcanvas offcanvas-end" tabindex="-1" id="offcanvasNavbar" aria-labelledby="offcanvasNavbarLabel">
                <div class="offcanvas-header">
                    <h5 class="offcanvas-title" id="offcanvasNavbarLabel">Menu</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="offcanvas" aria-label="Close"></button>
                </div>
                <div class="offcanvas-body d-lg-flex align-items-center justify-content-between w-100 gap-2">
                    <div class="position-relative mx-auto" style="max-width: 700px;">
                        <form class="d-flex align-items-center gap-2 w-100" onsubmit="return false;">
                            <select class="form-select" style="min-width: 160px; max-width: 200px;" id="categorySelect">
                                <option value="">Tất cả danh mục</option>
                                @if (ViewBag.Categories != null)
                                {
                                    foreach (var item in ViewBag.Categories)
                                    {
                                        <option value="@item.Value">@item.Text</option>
                                    }
                                }
                                else
                                {
                                    <option disabled>Không có danh mục</option>
                                }
                            </select>

                            <input class="form-control flex-grow-1" style="min-width: 260px; max-width: 400px;" type="search" id="searchInput"
                                   placeholder="🔎 Tìm kiếm bài đăng..." autocomplete="off" />
                        </form>

                        <ul id="searchResults" class="list-group position-absolute z-3 w-100 bg-white shadow"
                            style="top: 100%; display: none; max-height: 400px; overflow-y: auto;">
                        </ul>
                    </div>

                    <ul class="navbar-nav ms-lg-auto align-items-center gap-2">
                        @if (Session["userId"] != null)
                        {
                            <li class="nav-item position-relative">
                                <button class="nav-link position-relative bg-transparent border-0" id="notificationToggle" style="cursor: pointer;">
                                    <i class="bi bi-bell fs-5"></i>
                                    <span class="badge bg-danger position-absolute top-1 start-100 translate-middle rounded-pill" style="font-size: 0.6rem;">
                                        @Session["Notifycation"]
                                    </span>
                                </button>
                                <div id="notificationBox" class="position-absolute end-0 mt-2 shadow rounded bg-white" style="width: 300px; max-height: 400px; overflow-y: auto; display: none; z-index: 999;">
                                    <ul class="list-group list-group-flush">
                                        @try
                                        {
                                            @Html.Action("NotificationList", "Home")
                                        }
                                        catch (Exception ex){ Console.WriteLine(ex); }

                                    </ul>
                                </div>
                            </li>

                            <li class="nav-item">
                                <a href="@Url.Action("Messages", "Chat")" onclick="return openMessagesPopup();" class="nav-link position-relative">
                                    <i class="bi bi-chat-dots fs-5"></i>
                                    <span class="badge bg-danger position-absolute top-1 start-100 translate-middle rounded-pill" style="font-size: 0.6rem;">
                                        @Session["Chat"]
                                    </span>
                                </a>
                            </li>
                            <li class="nav-item dropdown">
                                <a class="nav-link dropdown-toggle d-flex align-items-center" href="#" id="userDropdown" role="button"
                                   data-bs-toggle="dropdown" aria-expanded="false">
                                    <img src="@avatarPath" class="rounded-circle me-2 navbar-avatar" style="width: 30px; height: 30px; object-fit: cover;" />
                                    <span class="fw-semibold d-none d-sm-inline">@username</span>
                                </a>
                                <ul class="dropdown-menu dropdown-menu-end shadow">
                                    <li><a class="dropdown-item" href="@Url.Action("Profile", "User")">Trang cá nhân</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("Favorite", "User")">Tin đã lưu</a></li>
                                    <li><a class="dropdown-item" href="@Url.Action("Create", "Listing")">Đăng tin</a></li>
                                    <li><a class="dropdown-item" href="" data-bs-toggle="modal" data-bs-target="#changePasswordModal">Đổi mật khẩu</a></li>
                                    <li><hr class="dropdown-divider" /></li>
                                    <li><a class="dropdown-item text-danger" href="@Url.Action("Logout", "Account")">Đăng xuất</a></li>
                                </ul>
                            </li>
                        }
                        else
                        {
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Index", "Account")" onclick="return openCenteredPopup(this.href, 'LoginPopup', 600, 700);">
                                    Đăng nhập
                                </a>
                            </li>
                            <li class="nav-item">
                                <a class="nav-link" href="@Url.Action("Register", "Account")" onclick="return openCenteredPopup(this.href, 'LoginPopup', 600, 700);">
                                    Đăng ký
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>
        </div>
    </nav>


    <main class="container my-4">
        @RenderBody()
    </main>

    <footer class=" pt-4 pb-2 mt-5" style="background-color:khaki">
        <div class="container">
            <div class="row gy-4">
                <div class="col-md-4">
                    <img src="~/Contents/image/Logo.png" alt="Logo"
                         class="img-fluid mb-2" style="max-height: 50px;" />
                    <p class="small">Nền tảng mua bán đáng tin cậy. Chúng tôi kết nối người mua và người bán một cách nhanh chóng, an toàn và thuận tiện.</p>
                </div>
                <div class="col-6 col-md-2">
                    <h6 class="text-uppercase fw-bold">Trang</h6>
                    <ul class="list-unstyled small">
                        <li><a href="@Url.RouteUrl("FriendlyHome")" class="text-dark text-decoration-none">Trang chủ</a></li>
                        <li><a href="@Url.RouteUrl("FriendlyAllListing")" class="text-dark text-decoration-none">Tin đăng</a></li>
                    </ul>
                </div>
                <div class="col-6 col-md-3">
                    <h6 class="text-uppercase fw-bold">Hỗ trợ</h6>
                    <ul class="list-unstyled small">
                        <li><a href="@Url.RouteUrl("FriendlyTerms")" class="text-dark text-decoration-none">Điều khoản sử dụng</a></li>
                        <li><a href="@Url.RouteUrl("FriendlyAbout")" class="text-dark text-decoration-none">Về chúng tôi</a></li>
                        <li><a href="@Url.RouteUrl("FriendlyContact")" class="text-dark text-decoration-none">Liên hệ</a></li>
                    </ul>
                </div>
                <div class="col-md-3">
                    <h6 class="text-uppercase fw-bold">Theo dõi chúng tôi</h6>
                    <a href="https://fb.com/NhutDuyOt" class="text-dark me-2"><i class="bi bi-facebook fs-5"></i></a>
                </div>
            </div>

            <hr class="border-secondary my-3" />

            <div class="text-center small text-muted">
                &copy; 2025 Tin tốt. Mọi bản quyền thuộc Nguyễn Nhựt Duy.
            </div>
        </div>
    </footer>


    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
    <div class="modal fade" id="changePasswordModal" tabindex="-1" aria-labelledby="changePasswordLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content p-3">
            <div class="modal-header">
                <h5 class="modal-title" id="changePasswordLabel">Đổi mật khẩu</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Đóng"></button>
            </div>
            <div class="modal-body">
                <div class="mb-3">
                    <label for="oldPassword" class="form-label">Mật khẩu cũ</label>
                    <input type="password" class="form-control" id="oldPassword">
                </div>
                <div class="mb-3">
                    <label for="newPassword" class="form-label">Mật khẩu mới</label>
                    <input type="password" class="form-control" id="newPassword">
                </div>
                <div class="mb-3">
                    <label for="confirmPassword" class="form-label">Xác nhận mật khẩu mới</label>
                    <input type="password" class="form-control" id="confirmPassword">
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                <button id="changeButton" type="button" class="btn btn-primary" onclick="changePassword()">Đổi mật khẩu</button>
            </div>
        </div>
    </div>
</div>
</body>
</html>
