@model Website_Mua_Ban_Rao_Vat.Models.HomeModel
@using Website_Mua_Ban_Rao_Vat.Models;
@{
    ViewBag.Title = "Trang chủ";
}
@functions {
    public string ToSlug(string str)
    {
        return str.ToLower()
                  .Replace(" ", "-")
                  .Replace("/", "")
                  .Replace("(", "")
                  .Replace(")", "")
                  .Replace("+", "")
                  .Replace(".", "")
                  .Replace(",", "")
                  .Replace("?", "")
                  .Replace("!", "")
                  .Replace(":", "")
                  .Replace(";", "")
                  .Replace("đ", "d")
                  .Normalize(System.Text.NormalizationForm.FormD)
                  .Where(c => System.Globalization.CharUnicodeInfo.GetUnicodeCategory(c) != System.Globalization.UnicodeCategory.NonSpacingMark)
                  .Aggregate("", (s, c) => s + c)
                  .Replace("--", "-");
    }
}
<style>
    @@media (max-width: 576px) {
    .card-title {
        font-size: 0.9rem;
    }
    .card-text {
        font-size: 0.85rem;
    }
}
    .hover-zoom {
        transition: transform 0.3s ease;
    }

        .hover-zoom:hover {
            transform: scale(1.05);
        }
    .card:hover {
        transform: translateY(-4px);
        box-shadow: 0 8px 20px rgba(0, 0, 0, 0.1);
        transition: all 0.3s ease-in-out;
    }
</style>
<script>
    function openFullscreen(event, url) {
        event.preventDefault();
        const win = window.open(url, '_blank');

        if (win) {
            win.focus();
            win.onload = () => {
                const docElm = win.document.documentElement;
                if (docElm.requestFullscreen) {
                    docElm.requestFullscreen().catch(err => {
                        console.error("Error attempting to enable full-screen mode:", err);
                    });
                } else if (docElm.mozRequestFullScreen) {
                    docElm.mozRequestFullScreen();
                } else if (docElm.webkitRequestFullscreen) {
                    docElm.webkitRequestFullscreen();
                } else if (docElm.msRequestFullscreen) {
                    docElm.msRequestFullscreen();
                }
            };
        } else {
            alert("Trình duyệt đã chặn popup. Vui lòng cho phép để xem ở chế độ toàn màn hình.");
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
        var myCarousel = document.querySelector('#demo');
        var carousel = new bootstrap.Carousel(myCarousel, {
            interval: 3000,
            ride: 'carousel'
        });
    });
</script>
<main class="container mt-4">
    <div id="demo" class="carousel carousel-fade slide mb-4" data-bs-ride="carousel">
        <div class="carousel-indicators">
            @for (int i = 0; i < Model.Bans.Count; i++)
            {
                <button type="button" data-bs-target="#demo" data-bs-slide-to="@i" class="@(i == 0 ? "active" : "")"></button>
            }
        </div>
        <div class="carousel-inner">
            @for (int i = 0; i < Model.Bans.Count; i++)
            {
                var ban = Model.Bans[i];
                <div class="carousel-item @(i == 0 ? "active" : "")">
                    <a class="ratio ratio-16x9 mb-4" href="@ban.Link">
                        <img src="@Url.Content(ban.Image)"
                             alt="Banner"
                             class="img-fluid rounded shadow-sm w-100 h-100"
                             style="object-fit: cover;" />
                    </a>
                </div>
            }
        </div>
        <button class="carousel-control-prev" type="button" data-bs-target="#demo" data-bs-slide="prev">
            <span class="carousel-control-prev-icon"></span>
        </button>
        <button class="carousel-control-next" type="button" data-bs-target="#demo" data-bs-slide="next">
            <span class="carousel-control-next-icon"></span>
        </button>
    </div>
    <div class="row text-center mb-5">
        <h3 class="fw-bold mb-4">Danh mục nổi bật</h3>
        @foreach (var item in Model.Categories)
        {

            <a class="col-6 col-sm-4 col-md-3 col-lg-2 mb-3 text-center d-flex flex-column align-items-center"
               href="@Url.RouteUrl("FriendlyLiByCate", new { slug = ToSlug(item.Name), encryptedId = IdProtector.EncryptId(item.Id) })"
               target="_blank"
               style="text-decoration:none; height:fit-content"
               onclick="openFullscreen(event, this.href)">
                <img src="@Url.Content(item.Image)"
                     class="mb-2 shadow-sm hover-zoom"
                     style="width: 100px; height: 100px; object-fit:cover; border-radius: 10px;"
                     alt="@item.Name" />

                <p>@item.Name</p>
            </a>
        }
    </div>
    <div class="row">
        <div class="d-flex justify-content-between align-items-center mb-3 flex-wrap">
            <h3 class="fw-bold mb-0">Bài đăng mới nhất</h3>
            <a href="@Url.RouteUrl("FriendlyAllListing")" class="text-primary small text-decoration-none mt-2 mt-md-0">Xem tất cả →</a>
        </div>


        @foreach (var post in Model.Listing)
        {
            <div class="col-6 col-sm-4 col-md-3 col-lg-2 mb-3 d-flex">
                <a class="card shadow-sm h-100 w-100"
                   href="@Url.RouteUrl("FriendlyDetail", new { slug = ToSlug(post.Title), encryptedId = IdProtector.EncryptId(post.Id) })"
                   target="_blank"
                   style="text-decoration:none; max-height:fit-content"
                   onclick="openFullscreen(event, this.href)">
                    @{
                        var firstImage = post.Images?.FirstOrDefault()?.ImageURL;
                    }

                    <div class="position-relative">
                        @if (!string.IsNullOrEmpty(firstImage))
                        {
                            <img src="@firstImage" class="card-img-top" alt="Hình ảnh"
                                 style="height:170px; object-fit:cover;" />
                        }
                        else
                        {
                            <img src="@Url.Content("~/Contents/image/no_image.png")" class="card-img-top" alt="Không có ảnh"
                                 style="height:170px; object-fit:cover;" />
                        }
                        <img src="~/Contents/image/Tin_Tot_span.png"
                             class="position-absolute"
                             style="bottom: 0.1px; right: 0.1px; width: 80px; height: 30px"
                             alt="icon nhỏ">
                    </div>


                    <div class="card-body">
                        <h6 class="card-title text-truncate" style="max-width: 100%;">@post.Title</h6>
                        <p class="card-text" style="color:red">@String.Format("{0:N0} đ", post.Price)</p>
                        @{
                            decimal rawAvg = Model.UserRatingAvg.ContainsKey(post.User.Id) ? Model.UserRatingAvg[post.User.Id] : 0;
                            double avgStar = (double)rawAvg;
                            int fullStars = (int)Math.Floor(avgStar);
                            bool hasHalfStar = (avgStar - fullStars) >= 0.5;
                            int emptyStars = 5 - fullStars - (hasHalfStar ? 1 : 0);
                        }
                        <div class="row ">
                            <div class="col-3">
                                <img class="rounded-circle border" src="@Url.Content(post.User.Avatar)" alt="Hình ảnh" style="width: 40px; height: 45px; object-fit: cover;">
                            </div>
                            <div class="col-9">
                                <div>
                                    @for (int i = 0; i < fullStars; i++)
                                    {
                                        <i class="fa-solid fa-star" style="color: #FFD43B;"></i>
                                    }
                                    @if (hasHalfStar)
                                    {
                                        <i class="fa-solid fa-star-half-stroke" style="color: #FFD43B;"></i>
                                    }
                                    @for (int i = 0; i < emptyStars; i++)
                                    {
                                        <i class="fa-regular fa-star" style="color: #FFD43B;"></i>
                                    }
                                </div>
                                <p>@(post.CreatedAt.HasValue ? post.CreatedAt.Value.ToString("dd/MM/yyyy") : "")</p>
                            </div>
                        </div>
                    </div>
                </a>
            </div>
        }
    </div>
</main>
