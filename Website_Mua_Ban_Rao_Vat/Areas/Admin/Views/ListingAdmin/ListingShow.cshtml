@using PagedList;
@using PagedList.Mvc;
@model IPagedList<Website_Mua_Ban_Rao_Vat.Models.Listing>


@{
    ViewBag.Title = "Tin đang hiển thị";
}



@if (Model.Count == 0)
{
    <h2 class="mb-4">📋 Không có Tin đang hiển thị</h2>
}
else
{
    @section scripts {
        <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var btn = document.getElementById("exportExcelBtn");
                btn.addEventListener("click", function (e) {
                    btn.classList.add("disabled");
                    btn.innerHTML = "⏳ Đang xuất...";
                    btn.style.pointerEvents = "none";
                    setTimeout(function () {
                        btn.classList.remove("disabled");
                        btn.innerHTML = "📋 Xuất Excel";
                        btn.style.pointerEvents = "auto";
                    }, 5000);
                });
            });
            $(document).on("click", ".delete-btn", function () {
                var id = $(this).data("id");
                var row = $(this).closest("tr");

                Swal.fire({
                    title: "Bạn có chắc muốn xoá?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Xoá",
                    cancelButtonText: "Huỷ"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post("/Admin/ListingAdmin/Delete", { id: id }, function () {
                            Swal.fire("Đã xoá!", "", "success");
                            location.reload();
                        });
                    }
                });
            });
            $(document).on("click", ".hide-btn", function () {
                var id = $(this).data("id");
                var row = $(this).closest("tr");

                Swal.fire({
                    title: "Bạn có chắc muốn ẩn?",
                    icon: "warning",
                    showCancelButton: true,
                    confirmButtonText: "Ẩn",
                    cancelButtonText: "Huỷ"
                }).then((result) => {
                    if (result.isConfirmed) {
                        $.post("/Admin/ListingAdmin/Hide", { id: id }, function () {
                            Swal.fire("Đã ẩn!", "", "success");
                            location.reload();
                        });
                    }
                });
            });
            function showModal(src) {
                Swal.fire({
                    imageUrl: src,
                    imageAlt: "Ảnh phóng to",
                    showConfirmButton: false,
                    showCloseButton: true
                });
            }
        </script>
    }
    <style>
        .image-scroll {
            display: flex;
            overflow-x: auto;
            max-width: 300px;
        }

            .image-scroll img {
                margin-right: 8px;
                border-radius: 6px;
                cursor: pointer;
                transition: transform 0.2s;
            }

                .image-scroll img:hover {
                    transform: scale(1.05);
                }

        .modal-img {
            display: none;
            position: fixed;
            z-index: 9999;
            padding-top: 60px;
            left: 0;
            top: 0;
            width: 100%;
            height: 100%;
            overflow: auto;
            background-color: rgba(0,0,0,0.8);
        }

        .modal-img-content {
            margin: auto;
            display: block;
            max-width: 90%;
            max-height: 90%;
        }

        .modal-img-close {
            position: absolute;
            top: 20px;
            right: 35px;
            color: #fff;
            font-size: 40px;
            font-weight: bold;
            cursor: pointer;
        }

        .pagination li a {
            class: page-link;
            display: block;
            padding: 0.5rem 0.75rem;
            color: #007bff;
            text-decoration: none;
            background-color: #fff;
            border: 1px solid #dee2e6;
            margin-left: -1px;
        }

        .pagination li.active a {
            z-index: 1;
            color: #fff;
            background-color: #007bff;
            border-color: #007bff;
        }

        .pagination li.disabled a {
            color: #6c757d;
            pointer-events: none;
            background-color: #fff;
            border-color: #dee2e6;
        }
        .detail-scroll {
            max-height: 100px;
            overflow-y: auto;
            word-break: break-word;
            white-space: normal;
        }
    </style>
    <div class="row">
        <div class="col-8">
            <h2 class="mb-4">📋 Tin đang hiển thị</h2>
        </div>
        <div class="col-4">
            <a id="exportExcelBtn" href="@Url.Action("ExportToExcel", "ListingAdmin", new {
    keyword = Request["keyword"],
    sort = Request["sort"],
    categoryId = Request["categoryId"],
    status = 1
})" class="btn btn-success" style="float:right">📋 Xuất Excel</a>

        </div>
    </div>
    <form method="get" class="row g-3 mb-4">
        <div class="col-md-4">
            <input type="text" name="keyword" class="form-control" placeholder="🔍 Tìm theo tiêu đề..." value="@Request["keyword"]" />
        </div>

        <div class="col-md-3">
            <select name="sort" class="form-select">
                <option value="asc" @(Request["sort"] == "asc" ? "selected" : "")>Cũ nhất</option>
                <option value="desc" @(Request["sort"] == "desc" ? "selected" : "")>Mới nhất</option>
            </select>
        </div>

        <div class="col-md-3">
            <select name="categoryId" class="form-select">
                <option value="">Tất cả danh mục</option>
                @{
                    var categories = ViewBag.Categories as List<Website_Mua_Ban_Rao_Vat.Models.Category>;
                }
                @if (categories != null)
                {
                    foreach (var parent in (categories).Where(c => c.ParentId == null))
                    {
                        <option value="@parent.Id" @(Request["categoryId"] == parent.Id.ToString() ? "selected" : "")>
                            📁 @parent.Name
                        </option>

                        foreach (var child in (categories).Where(c => c.ParentId == parent.Id))
                        {
                            <option value="@child.Id" @(Request["categoryId"] == child.Id.ToString() ? "selected" : "")>
                                &nbsp;&nbsp;&nbsp;↳ @child.Name
                            </option>
                        }
                    }
                }
            </select>
        </div>

        <div class="col-md-2">
            <button type="submit" class="btn btn-primary w-100">Lọc</button>
        </div>
    </form>

    <table class="table table-bordered table-striped table-hover">
        <thead class="table-dark">
            <tr>
                <th>Tiêu đề</th>
                <th>Hình ảnh</th>
                <th>Chi tiết</th>
                <th>Địa chỉ</th>
                <th>Tạo lúc</th>
                <th>Danh mục</th>
                <th>Người đăng</th>
                <th>Thao tác</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>
                    <td>@item.Title</td>
                    <td>
                        <div class="image-scroll">
                            @foreach (var img in item.Images)
                            {
                                <img src="@Url.Content(img.ImageURL)" alt="Image" width="80" onclick="showModal(this.src)" />
                            }
                        </div>
                    </td>
                    <td>
                        <div class="detail-scroll">
                            @Html.Raw(item.Description)
                        </div>
                    </td>
                    <td>
                        <a href="https://www.google.com/maps?q=@Uri.EscapeDataString(item.Location)" target="_blank">
                            @item.Location
                        </a>
                    </td>
                    <td>@(item.CreatedAt.HasValue ? item.CreatedAt.Value.ToString("dd/MM/yyyy HH:mm") : "Không")</td>
                    <td>@item.Category.Name</td>
                    <td>@item.User.FullName</td>
                    <td>
                        <button class="btn btn-info btn-sm hide-btn" data-id="@item.Id"><i class="bi bi-eye-slash"></i> Ẩn</button>
                        <p></p>
                        <button class="btn btn-danger btn-sm delete-btn" data-id="@item.Id">🗑 Xoá</button>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div class="d-flex justify-content-center mt-4">
        @Html.PagedListPager(Model, page => Url.Action("ListingShow", new
        {
            page,
        keyword = Request["keyword"],
        sort = Request["sort"],
        categoryId = Request["categoryId"]
    }), new PagedListRenderOptions
    {
        MaximumPageNumbersToDisplay = 5,
        UlElementClasses = new[] { "pagination", "pagination-lg", "justify-content-center" },
        LiElementClasses = new[] { "page-item" },

        DisplayLinkToFirstPage = PagedListDisplayMode.Always,
        DisplayLinkToLastPage = PagedListDisplayMode.Always,
        DisplayLinkToPreviousPage = PagedListDisplayMode.Always,
        DisplayLinkToNextPage = PagedListDisplayMode.Always,
        DisplayLinkToIndividualPages = true,

        LinkToPreviousPageFormat = "«",
        LinkToNextPageFormat = "»",
        LinkToFirstPageFormat = "««",
        LinkToLastPageFormat = "»»"
    })
    </div>
    <div id="imgModal" class="modal-img" onclick="hideModal()">
        <span class="modal-img-close" onclick="hideModal()">&times;</span>
        <img class="modal-img-content" id="modalImage" />
    </div>
}

